{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/register.component.ts","webpack:///src/app/components/register.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main/card/card.component.ts","webpack:///src/app/main/card/card.component.html","webpack:///src/app/main/chat.service.ts","webpack:///src/app/main/chat/chat.component.ts","webpack:///src/app/main/chat/chat.component.html","webpack:///src/app/main/container.component.ts","webpack:///src/app/main/container.component.html","webpack:///src/app/main/main-routing.module.ts","webpack:///src/app/main/main.module.ts","webpack:///src/app/main/repeat.directive.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/register.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","activatedRoute","title","activeRoute","console","log","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","RegisterComponent","registerService","profile","first_name","last_name","username","password","warn","value","reset","submit","LoginComponent","service","user","login","subscribe","CardComponent","ChatService","socket","responses","chatMessage","msg","emit","observer","on","next","providedIn","ChatComponent","chatService","displayMessages$","chatMessages","getMessage","push","message","sendMessage","onSubmit","ContainerComponent","MainRoutingModule","forChild","config","url","options","MainModule","RepeatDirective","templateRef","viewContainerRef","viewRef","counter","index","array","length","createEmbeddedView","NavbarComponent","RegisterService","http","httpOptions","headers","post","pipe","handleError","operation","result","error","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './components/register.component'\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'myapp';\n  activeRoute: any ;\n\n  constructor(private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit() {\n    /* this.activatedRoute.queryParams.subscribe(params => {\n      this.activeRoute = params[0];\n      console.log(this.activeRoute);\n    }); */\n    this.activeRoute = this.activatedRoute.component;\n    console.log(this.activeRoute);\n  }\n}\n","<div class=\"container\">  \n    <app-navbar></app-navbar>\n    <router-outlet></router-outlet>    \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { MainModule } from './main/main.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './components/register.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    NavbarComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    MainModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RegisterService } from '../register.service';\nimport { User } from '../user';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  profile = new FormGroup({\n    first_name: new FormControl(''),\n    last_name: new FormControl(''),\n    username: new FormControl(''),\n    password: new FormControl('')\n  });\n\n  constructor( private registerService: RegisterService) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n  /*   this.registerService.register(this.profile.value)\n      .subscribe(user => console.log(user)); */\n      console.warn(this.profile.value);\n      this.profile.reset();\n    \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"container-item\">\n        <h1>Register</h1>\n        <form class='formgroup'  [formGroup]='profile' (ngSubmit)='submit()' action=\"\">\n            <div class='form-item'>\n                <label class=\"label\" for=\"first_name\">\n                    <span class=\"badge\">First Name:</span>                \n                    <input class='input' formControlName='first_name' type=\"text\" required>\n                </label>\n            </div>\n            <div class=form-item>\n                <label class=\"label\" for=\"last_name\">\n                    Last Name:\n                    <input class='input' formControlName='last_name' type=\"text\" required>\n                </label>\n            </div>\n            <div class=\"form-item\">\n                <label class=\"label\" for=\"username\">\n                    Username:\n                    <input class='input' formControlName='username' type=\"text\" required>\n                </label>\n            </div>\n            <div class=\"form-item\">\n                <label class=\"label\" for=\"password\">\n                    Password:\n                    <input class='input' formControlName='password' type=\"password\" required>\n                </label>\n            </div>      \n            <div class=\"form-item\">\n                <button class='btn-submit' type='submit'  [disabled]='!profile.valid'>Register</button>\n            </div>\n        </form> \n    </div>      \n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from '../register.service'\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n    \n  });\n\n  constructor(private service : RegisterService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  login(){\n    this.service.login(this.user.value)\n      .subscribe(user => console.log(user));\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"container-item\">\n        <h1>Login</h1>\n        <form class='formgroup'  [formGroup]='user' (ngSubmit)='login()' action=\"\">\n            <div class='form-item'>\n                <label class=\"label\" for=\"username\">\n                    Username:\n                    <input class='input' formControlName='username' type=\"text\" required>\n                </label>\n            </div>\n            <div class=form-item>\n                <label class=\"label\" for=\"password\">\n                    Password:\n                    <input class='input' formControlName='password' type=\"password\" required>\n                </label>\n            </div>\n            <div class=\"form-item\">\n                <button class='btn-submit' type='submit'  [disabled]='!user.valid'>Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n    <h2>main area</h2>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  responses = [];\n  chatMessage = '';\n\n  constructor(private socket: Socket) { }\n\n\n  sendMessage(msg: string){\n    this.socket.emit('message',msg);\n    /* this.socket.on('message', (msg)=>{\n      this.chatMessage = msg;\n      this.responses.push(msg)}); */\n  }\n\n  getMessage(){\n    return new Observable(observer=>{\n      this.socket.on('message', (msg)=>{\n        observer.next(msg);\n      })\n    })\n    \n           \n  }\n \n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  message: string ;\n  displayMessages$ = new Observable(observer=>{    \n      observer.next(this.chatMessages);      \n  });\n  chatMessages = [];\n\n  constructor(\n    //private socket: Socket,\n    private chatService: ChatService\n    ) {\n      /* this.socket.on('connection', ()=>{\n        console.log('connected');\n      }) */\n    }\n\n  ngOnInit(): void {\n    this.chatService.getMessage().subscribe(msg=>{\n      this.chatMessages.push(msg);\n    })\n    //this.getMsg();\n    //console.log(this.chatMessage);\n  }\n\n  onSubmit(){\n    this.chatMessages.push(this.message);\n    this.chatService.sendMessage(this.message);\n    //this.chatMessage = this.message;\n    //this.socket.emit('message', this.message);\n    this.message = '';\n   // this.getMsg();\n    //console.log(this.chatMessages);\n    \n\n/* \n    this.chatService.sendMessage(this.message);\n    this.message = '';\n    this.chatMessage = this.chatService.chatMessage;\n    this.responses = this.chatService.responses;  \n    console.log(this.message); */\n  }\n\n  /* getMsg(){\n    this.socket.on('message', (msg)=>{\n      this.chatMessages.push(msg);\n     // this.chatMessage = msg;\n      //this.chatMessage = msg;\n    })\n  } */\n\n}\n","<div class=\"container\">\n    <section class=\"display\">        \n        <p class=\"display-message\" *ngFor=\"let message of displayMessages$|async\">{{ message }}<br></p>        \n    </section>\n    <div class=\"input\">\n        <input class=\"input-text\" type=\"text\" [(ngModel)]= \"message\">\n        <button class=\" input-button\" (click)=\"onSubmit()\">SEND</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"container\">\n        <div class=\" card container-item1\">\n            <app-card></app-card>\n        </div>\n        <div class=\"card container-item2\">\n            <app-card></app-card>\n        </div>\n        <div class=\"card container-item3\">\n            <app-card></app-card>\n        </div>\n        <div class=\"card container-item4\">\n            <app-card></app-card>\n        </div>\n        <div class=\"container-item5\">\n            <app-card></app-card>\n        </div>\n        <div class=\" container-item6\">\n            <app-chat></app-chat>\n        </div>     \n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardComponent } from './card/card.component';\nimport { ContainerComponent } from './container.component';\n\n\nconst routes: Routes = [\n  { path: 'container', component: ContainerComponent},\n  {path: 'card', component: CardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { ContainerComponent } from './container.component';\nimport { CardComponent } from './card/card.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { RepeatDirective } from './repeat.directive';\n\nconst config: SocketIoConfig = {url: 'http://localhost:3000', options: {}};\n\n\n@NgModule({\n  declarations: [ContainerComponent, CardComponent, ChatComponent, RepeatDirective],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SocketIoModule.forRoot(config),\n    MainRoutingModule\n  ]\n})\nexport class MainModule { }\n","import { Directive, Input, Output, EventEmitter, TemplateRef, ViewContainerRef, ViewRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeat]'\n})\nexport class RepeatDirective {\n\n  counter = 0;\n\n  @Output() index = new EventEmitter;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private viewRef: ViewRef\n    ) { }\n\n  @Input() set appRepeat(array: []){\n    if(array.length > this.counter || array.length == this.counter){\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n      //this.viewContainerRef.insert(this.viewRef);\n      this.index.emit(this.counter);\n      this.counter++;      \n    }\n  }\n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"container\">\n    <div class=\"navbar\">\n        <ul class=\"list-group\">\n            <li class=\"list-item\"><a routerLink=\"\">Home</a></li>\n            <li class=\"list-item list-item-register\"><a routerLink=\"/register\" routerLinkActive=\"active\">Register</a></li>\n            <li class=\"list-item list-item-login\"><a routerLink=\"/login\">Login</a></li>\n            <li class=\"list-item list-item-login\"><a routerLink=\"/container\">chat</a></li>\n        </ul>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  url = 'http://localhost:3000';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n  \n\n  constructor( private http: HttpClient ) { }\n \n\n  register(user: User): Observable<User> {\n    return this.http.post<User>(`${this.url}/users/register`, user, this.httpOptions)\n      .pipe(\n        catchError(this.handleError<User>('register'))\n      )\n  }\n\n  login(user){\n    return this.http.post(`${this.url}/login/user`, user, this.httpOptions)\n      .pipe(\n        catchError(this.handleError('login'))\n      )\n  }\n\n  private handleError<T>(operation= 'operation', result?:T){\n    return (error:any): Observable<T> => {\n      console.error(error);\n      return of(result as T);\n    }\n\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}